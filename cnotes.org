#+TITLE: Random notes from learning C

** How to ignore individual warnings in Clang
#+BEGIN_SRC C
    #pragma clang diagnostic push
    #pragma clang diagnostic ignored "-Wdouble-promotion"
    /* this would normally produce an error with -Weverything, -Werror */
    printf("FLT_EPSILON = %e\n", FLT_EPSILON);
    #pragma clang diagnostic pop
#+END_SRC

*** [[https://www.bignerdranch.com/blog/a-bit-on-warnings/][A Bit On Warnings]]
** =%a= to print floats in hex notation (C99/C11)
** C99's policy on modular arithmetic with negative values is: a % b < 0 iff a < 0; a % b == a - (a/b)*b
*** 11 / -5 == -2, 11 % - 2 == 1
*** a % b == a - (a/b)*b
*** -11 % 5 = -11 - (-11/5)*5 = -11 - (-2)*5 = -11 - (-10) = -1
** =break= statements in =switch=
   It's pretty easy to remember to add a =break= statement after each
   =case= statement, but it can be slightly confusing to realize
   why. Why not just test each expression of each =case= statement?
   Well, if a =case= expression matches and there's no =break=, every
   =case= statement after that gets executed, matching or not.

   So the =break= keeps non-matching =case= statements (which don't
   get evaluated) from exdecuting.
